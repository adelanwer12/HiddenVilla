@page "/hotel-room/create"
@using ModelsDtos
@using Business.IRepository
@inject IHotelRoomRepository HotelRoomRepository
@inject NavigationManager NavigationManager

<div class="row mt-2 mb-5">
    <h3 class="card-title text-info mb-3 ml-3">@Title Hotel Room</h3>
    <div class="col-md-12">
        <div class="card">
            <div class="card-body">
                <EditForm Model="HotelRoomModel" OnValidSubmit="HandelHotelRoomUpsert">
                    <DataAnnotationsValidator/>
                    @*<ValidationSummary/>*@
                    <div class="form-group">
                        <label for="hotelRoomName">Name</label>
                        <InputText id="hotelRoomName" @bind-Value="HotelRoomModel.Name" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.Name"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="Occupancy">Occupancy</label>
                        <InputNumber id="Occupancy" @bind-Value="HotelRoomModel.Occupancy" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.Occupancy"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="Rate">Rate</label>
                        <InputNumber id="Rate" @bind-Value="HotelRoomModel.RegularRate" class="form-control"></InputNumber>
                        <ValidationMessage For="() => HotelRoomModel.RegularRate"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="Sq_ft">Sq ft.</label>
                        <InputText id="Sq_ft" @bind-Value="HotelRoomModel.SqFt" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.SqFt"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <label for="Details">Details</label>
                        <InputText id="Details" @bind-Value="HotelRoomModel.Details" class="form-control"></InputText>
                        <ValidationMessage For="() => HotelRoomModel.Details"></ValidationMessage>
                    </div>
                    <div class="form-group">
                        <button class="btn btn-primary">@Title Room</button>
                        <NavLink href="hotel-room" class="btn btn-secondary">Back to Index</NavLink>
                    </div>
                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {
    private HotelRoomDto HotelRoomModel { get; set; } = new HotelRoomDto();
    private string Title { get; set; } = "Create";

    private async Task HandelHotelRoomUpsert()
    {
        var roomByName = await HotelRoomRepository.IsRoomUnique(HotelRoomModel.Name);
        if (roomByName != null)
        {
            // there is duplicate room show error
            return;
        }
        var createdResult = await HotelRoomRepository.CreateHotelRoom(HotelRoomModel);
        NavigationManager.NavigateTo("hotel-room");
    }
}